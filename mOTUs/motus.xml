<tool id="motus" name="mOTUs" version="0.1.0+galaxy0" python_template_version="3.5" profile="21.05">
    <description> Marker gene-based OTU (mOTU) profiling </description>
    <requirements>
        <requirement type="package" version="3.1.0">motus</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
    TODO: Fill in command template.
    ]]></command>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
<help>
    
        *mOTUs*
        
        Program: motus - a tool for marker gene-based OTU (mOTU) profiling
        Version: 3.1.0
        Reference: Ruscheweyh, Milanese et al. Reference genome-independent taxonomic profiling of microbiomes with mOTUs3. biorxiv (2022). doi: 10.1101/2021.04.20.440600
        
        *How to use*
        
        mOTUs offers a varaity of different methods, which are designed for Taxonomic profiling and SVN calling:

        **Taxonomic profiling**
        profile     Perform taxonomic profiling (map_tax + calc_mgc + calc_motu) in a single step
        merge       Merge several taxonomic profiling results into one table

        map_tax     Map reads to the marker gene database
        calc_mgc    Calculate marker gene cluster (MGC) abundance
        calc_motu   Summarize MGC abundances into a mOTU profile

        prep_long   Prepare long reads to be profiled by mOTUs

        **SNV calling**
        map_snv     Map reads to the marker gene database for SNV calling
        snv_call    Generate SNV profiles (using metaSNV)

        Type motus <command> to print the help menu for a specific command

        **Input parameters**
        
        - Query sequence: The sequence that will be compared against the reference. Use only FASTQ format.

        
        **Output data sets**
        
        Two files are produced when running GECKO:
        
        - query-reference.csv: A CSV file that includes metadata about the sequence compared and each HSP detected. See section "Interpreting the CSV" below for more information. This file can be used to visualize the comparison in the interactive sequence visualizer GECKO-MGV (use online here or download and install here).
        - query-reference.txt: This file contains the alignments in a BLAST-like format (only generated if alignment extraction is selected).
        
        The CSV file can be interpreted as follows. Each column represents:
        
        `Type,xStart,yStart,xEnd,yEnd,strand(f/r),block,length,score,ident,similarity,%ident,SeqX,SeqY`
        
        
        - Type: currently, this field is reserved for Frag.
        - xStart: starting coordinates of the alignment in the query sequence.
        - yStart: starting coordinates of the alignment in the reference sequence.
        - xEnd: ending coordinates of the alignment in the query sequence.
        - yEnd: ending coordinates of the alignment in the reference sequence.
        - strand: a character f or r encoding whether the alignment is in the forward or reverse strand.
        - block: currently reserved.
        - length: the length in nucleotides of the alignment.
        - score: the raw score of the alignment calculated with +4 and -4 per match and mismatch.
        - ident: the number of identities found in the alignment (i.e. matches).
        - similarity: the similarity percentage calculated as the achieved raw score divided by the maximum possible score.
        - %ident: the number of identities divided by the length of the alignment.
        - SeqX: the ID corresponding to the sequence in the query file to which the xStart and xEnd coordinates correspond (0=> first sequence, 1=> second sequence, etc).
        - SeqY: same as above but for the reference file.
        
        Note that fragments in the reverse strand (marked with the r field) have their yStart and yEnd coordinates switched, i.e. yEnd is smaller than yStart.
    </help>
</tool>